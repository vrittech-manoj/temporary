#WAP/Algorithm which can monitor as traffic ,
# if any cars/buses etc goes against trafic rule then must fine ammount from their bank account
# no helmet fine charges = 200
# high speed fine charges = 350
# .....rules
# detect car/buses number.
# find detail of car/buses with their vehicles number
# and reduces ammount from his bank account.

class TrafficControl:
    def __init__(self) -> None:
        self.helmet_fine = 250
        self.speed_fine =  350
        self.monitor()

    def getSpeedVehicle(self):
        return random_speed < 200
    
    def detectHelmet(self):
        return True/False random 

    def detectSheatbelt(self)
        return True/False random 
    
    def getVehicleDetail(self):
        return {"vehicle_number":self.vehicle_number,"vehicle-name":self.vehicle_name,"owner_name":"ram","account_num":"00823667413","mobile_number":9808908}
    
    def isOk(self): #if vehicle goes against trafic rule then return false else return True
        return False
    
    def Fine(self): #reduces or  take  fine from owner bank account
        pass

    def monitor(self):
        self.vehicle_number =  "2100"
        self.vehicle_name = "maruti"

while True:
    vehicle_obj = TrafficControl() #argment is vehicle number
    if vehicle_obj.isOk() == False:
        vehicle_obj.Fine()


# car obj loop create
# detect vehicle number and vehicle type
# if vehicle type in ['motorcycle']
#     helmetdetect(true,false)
# elif vehicle_type in ['bus,truck','car']
#     check sheatbelt (true,false)

# check speed (true,false) 

# if speed false:
#     self.voilation type = highes speed 
#     self.total_fine = self.total_fine + speed_voilation_fine



